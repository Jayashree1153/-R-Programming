SAVEETHA SCHOOL OF ENGINEERING

SAVEETHA INSTITUTE OF MEDICAL AND TECHNICAL SCIENCES

ITA 0443 - STATISTICS WITH R PROGRAMMING FOR REAL TIME


PROBLEM
DAY 4– LAB MANUAL

Reg No: 192121153
Name: S. Jayashree

LINEAR REGRESSION ANALYSIS IN R

Exercise
1. Using linear regression analysis establish a relationship between height and weight of a
person using the input vector given below.
# Values of height
151, 174, 138, 186, 128, 136, 179, 163, 152, 131
# Values of weight.
63, 81, 56, 91, 47, 57, 76, 72, 62, 48
Predict the weight of a person with height 170. Visualize the regression graphically.
Program:
# The predictor vector.

x &lt;- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
# The resposne vector.
y &lt;- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
# Apply the lm() function.

relation &lt;- lm(y~x)
# Find weight of a person with height 170.
a &lt;- data.frame(x = 170)

result &lt;- predict(relation,a)

print(result)
plot(x,y,col = &quot;blue&quot;,main = &quot;Height &amp; Weight Regression&quot;,abline(lm(x~y)),cex = 1.3,pch = 16,xlab =
&quot;Weight in Kg&quot;,ylab = &quot;Height in cm&quot;)
Output:
&gt; source(&quot;~/.active-rstudio-document&quot;)
1
76.22869
&gt;

2. Download the Dataset “water” From R dataset Link. Find out whether there is a linear
relation between attributes “mortality” and “hardness” by plot function. Fit the Data into the
Linear Regression model. Predict the mortality for the hardness=88

Program:
dataset&lt;-read.csv(&quot;water.csv&quot;)
View(data)
plot(data$mortality, data$hardness, col=&quot;RED&quot;, main= &quot;Linear Regression&quot; ,
xlab = &quot;mortality&quot;, ylab= &quot;hardness&quot;,abline(lm(mortality~hardness,data = dataset)))
rel&lt;-lm(mortality~hardness,data = dataset)

A&lt;- data.frame(hardness=88)
Res&lt;- predict(rel, A)
print(Res)

Output:
Res&lt;- predict(rel, A)
1
1.394

MULTIPLE REGRESSION ANALYSIS IN R

Exercise:
1.Generate a multiple regression model using the built in dataset mtcars. It gives a comparison
between different car models in terms of mileage per gallon (mpg), cylinder
displacement ”disp”), horse power(“hp”), weight of the car(“wt”) and some more parameters.
Establish the relationship between “mpg” as a response variable with “disp”,”hp” and “wt” as
predictor variables. Predict the mileage of the car with dsp =221,hp=102 and wt =2.91.
Program:

input &lt;- mtcars[,c(&quot;mpg&quot;,&quot;disp&quot;,&quot;hp&quot;,&quot;wt&quot;)]
print(head(input))
input &lt;- mtcars[,c(&quot;mpg&quot;,&quot;disp&quot;,&quot;hp&quot;,&quot;wt&quot;)]

# Create the relationship model.
model &lt;- lm(mpg~disp+hp+wt, data = input)
# Show the model.
print(model)
# Get the Intercept and coefficients as vector elements.
cat(&quot;# # # # The Coefficient Values # # # &quot;,&quot;\n&quot;)
a &lt;- coef(model)[1]
print(a)
Xdisp &lt;- coef(model)[2]

Xhp &lt;- coef(model)[3]
Xwt &lt;- coef(model)[4]
print(Xdisp)
print(Xhp)
print(Xwt)

Output:

&gt; source(&quot;~/.active-rstudio-document&quot;)
mpg disp hp wt
Mazda RX4 21.0 160 110 2.620
Mazda RX4 Wag 21.0 160 110 2.875
Datsun 710 22.8 108 93 2.320
Hornet 4 Drive 21.4 258 110 3.215
Hornet Sportabout 18.7 360 175 3.440
Valiant 18.1 225 105 3.460

Call:
lm(formula = mpg ~ disp + hp + wt, data = input)

Coefficients:
(Intercept) disp hp wt
37.105505 -0.000937 -0.031157 -3.800891

# # # # The Coefficient Values # # #
(Intercept)
37.10551
disp
-0.0009370091

hp
-0.03115655
wt
-3.800891
&gt;
2. Consider the data set “delivery” available in the R environment. It gives a deliverytime
(“delTime”)of production materials(number of productions “n.prod”) with the given
distance(“distance”) to reach the destination place.
a)Create the model to establish the relationship between “delTime” as a response
variable with “n.prod” and “distance” as predictor variables.
b)Predict the delTime for the given number of production(“n.prod”)=9 and
distance(“distance”)=450
Program:

library(robustbase)
library(investr)
library(ggplot2)

library(gridExtra)
data(&quot;delivery&quot;)
dist.lm &lt;- lm(delTime ~ distance, data = delivery)
prod.lm &lt;- lm(delTime ~ n.prod, data = delivery)
par(mfrow=c(2,2))

plotFit(dist.lm, interval = &#39;confidence&#39;, adjust = &#39;Scheffe&#39;, main = &#39;Working-Hotelling DelTime ~
Distance&#39;)
plotFit(prod.lm, interval = &#39;confidence&#39;, adjust = &#39;Scheffe&#39;, main = &#39;Working-Hotelling DelTime ~
Products&#39;)

plotFit(dist.lm, interval = &#39;confidence&#39;, k = 9, adjust = &#39;Bonferroni&#39;, main = &#39;Bonferroni DelTime ~
Distance&#39;)

plotFit(prod.lm, interval = &#39;confidence&#39;, k = 450, adjust = &#39;Bonferroni&#39;, main = &#39;Bonferroni DelTime ~
Products&#39;)
Output:

LOGISTIC REGRESSION ANALYSIS IN R

Exercise

1. Create a logistic regression model using the “mtcars” data set with the information given
below.
The in-built data set “mtcars” describes different models of a car with their various engine
specifications. In “mtcars” data set, the transmission mode (automatic or manual) is described
by the column am which is a binary value (0 or 1). Create a logistic regression model
between the columns “am” and 3 other columns - hp, wt and cyl.
Program:
library(knitr)
library(printr)
kable(head(mtcars),align = &#39;c&#39;)

mtcars$amfactor &lt;- factor(mtcars$am, labels = c(&quot;automatic&quot;, &quot;manual&quot;))

summary(lm(mpg ~ factor(amfactor), data = mtcars))$coef

library(MASS)
fit &lt;- lm(mpg ~ cyl+disp+hp+drat+wt+qsec+factor(vs)+factor(am)+gear+carb, data = mtcars)

step &lt;- stepAIC(fit, direction=&quot;both&quot;, trace=FALSE)

summary(step)$coeff


Output:

&gt; kable(head(mtcars),align = &#39;c&#39;)
 
 
|                  | mpg  | cyl | disp | hp  | drat |  wt   | qsec  | vs | am | gear | carb | amfactor  |
|:-----------------|:----:|:---:|:----:|:---:|:----:|:-----:|:-----:|:--:|:--:|:----:|:----:|:---------:|
|Mazda RX4         | 21.0 |  6  | 160  | 110 | 3.90 | 2.620 | 16.46 | 0  | 1  |  4   |  4   |  manual   |
|Mazda RX4 Wag     | 21.0 |  6  | 160  | 110 | 3.90 | 2.875 | 17.02 | 0  | 1  |  4   |  4   |  manual   |
|Datsun 710        | 22.8 |  4  | 108  | 93  | 3.85 | 2.320 | 18.61 | 1  | 1  |  4   |  1   |  manual   |
|Hornet 4 Drive    | 21.4 |  6  | 258  | 110 | 3.08 | 3.215 | 19.44 | 1  | 0  |  3   |  1   | automatic |
|Hornet Sportabout | 18.7 |  8  | 360  | 175 | 3.15 | 3.440 | 17.02 | 0  | 0  |  3   |  2   | automatic |
|Valiant           | 18.1 |  6  | 225  | 105 | 2.76 | 3.460 | 20.22 | 1  | 0  |  3   |  1   | automatic |

&gt; mtcars$amfactor &lt;- factor(mtcars$am, labels = c(&quot;automatic&quot;, &quot;manual&quot;))
&gt; summary(lm(mpg ~ factor(amfactor), data = mtcars))$coef
                        Estimate Std. Error   t value     Pr(&gt;|t|)
                        
(Intercept)            17.147368   1.124603 15.247492 1.133983e-15

factor(amfactor)manual  7.244939   1.764422  4.106127 2.850207e-04
&gt; library(MASS)
&gt; fit &lt;- lm(mpg ~ cyl+disp+hp+drat+wt+qsec+factor(vs)+factor(am)+gear+carb, data = mtcars)
&gt; step &lt;- stepAIC(fit, direction=&quot;both&quot;, trace=FALSE)
&gt; summary(step)$coeff
             Estimate Std. Error   t value     Pr(&gt;|t|)
(Intercept)  9.617781  6.9595930  1.381946 1.779152e-01

POISSON REGRESSION ANALYSIS IN R

Exercise :
1. Create a Poisson regression model using the in-built data set “warpbreaks” with
information given below.
In-built data set “warpbreaks” describes the effect of wool type (A or B) and tension (low,
medium or high) on the number of warp breaks per loom. Consider “breaks” as the response
variable which is a count of number of breaks. The wool &amp;”type” and “tension” are taken as
predictor variables.

Program:
output_result &lt;-glm(formula = breaks ~ wool + tension,

data = warpbreaks, family = poisson)

output_result
mtcars$amfactor &lt;- factor(mtcars$am, labels = c(&quot;automatic&quot;, &quot;manual&quot;))
summary(lm(mpg ~ factor(amfactor), data = mtcars))$coef
library(MASS)
fit &lt;- lm(mpg ~ cyl+disp+hp+drat+wt+qsec+factor(vs)+factor(am)+gear+carb, data = mtcars)
step &lt;- stepAIC(fit, direction=&quot;both&quot;, trace=FALSE)
summary(step)$coeff
Output:
&gt; output_result

Call: glm(formula = breaks ~ wool + tension, family = poisson, data = warpbreaks)

Coefficients:

(Intercept) woolB tensionM tensionH
3.6920 -0.2060 -0.3213 -0.5185

Degrees of Freedom: 53 Total (i.e. Null); 50 Residual
Null Deviance: 297.4

Residual Deviance: 210.4 AIC: 493.1
